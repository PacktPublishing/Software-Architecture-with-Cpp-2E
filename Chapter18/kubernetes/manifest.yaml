apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-deployment
  labels:
    app: customer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: customer
  template:
    metadata:
      labels:
        app: customer
    spec:
      containers:
        - name: customer
          image: customer:latest
          imagePullPolicy: Never
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080
          readinessProbe:
            httpGet:
              path: /health
              port: http
          livenessProbe:
            httpGet:
              path: /health
              port: http
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: http://aspire-dashboard-otlp-clusterip:8080
            - name: OTEL_SERVICE_NAME
              value: customer
            - name: OTEL_EXPORTER_OTLP_INSECURE
              value: "true"
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /var/run
              name: tmpfs
      volumes:
        - name: tmpfs
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: customer
spec:
  type: NodePort
  selector:
    app: customer
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30000
---
apiVersion: v1
kind: Service
metadata:
  name: ingress
  namespace: ingress
spec:
  selector:
    name: customer-ingress-microk8s
  type: LoadBalancer
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customer-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: customer.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: customer
                port:
                  number: 8080
